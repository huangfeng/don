0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish', '.' ]
2 info using npm@1.2.32
3 info using node@v0.10.12
4 verbose publish [ '.' ]
5 verbose read json /Users/tf/dev/don/package.json
6 verbose cache add [ '.', null ]
7 verbose cache add name=undefined spec="." args=[".",null]
8 verbose parsed url { protocol: null,
8 verbose parsed url   slashes: null,
8 verbose parsed url   auth: null,
8 verbose parsed url   host: null,
8 verbose parsed url   port: null,
8 verbose parsed url   hostname: null,
8 verbose parsed url   hash: null,
8 verbose parsed url   search: null,
8 verbose parsed url   query: null,
8 verbose parsed url   pathname: '.',
8 verbose parsed url   path: '.',
8 verbose parsed url   href: '.' }
9 silly lockFile 3a52ce78- .
10 verbose lock . /Users/tf/.npm/3a52ce78-.lock
11 verbose read json package.json
12 verbose tar pack [ '/var/folders/a1/a1Sg2MdXGcuIAjVu57gR9k+++TI/-Tmp-/npm-56300/1372501519337-0.2890261486172676/tmp.tgz',
12 verbose tar pack   '.' ]
13 verbose tarball /var/folders/a1/a1Sg2MdXGcuIAjVu57gR9k+++TI/-Tmp-/npm-56300/1372501519337-0.2890261486172676/tmp.tgz
14 verbose folder .
15 info prepublish don@0.0.1
16 silly lockFile 1f1177db-tar tar://.
17 verbose lock tar://. /Users/tf/.npm/1f1177db-tar.lock
18 silly lockFile 2cebc6c6-19337-0-2890261486172676-tmp-tgz tar:///var/folders/a1/a1Sg2MdXGcuIAjVu57gR9k+++TI/-Tmp-/npm-56300/1372501519337-0.2890261486172676/tmp.tgz
19 verbose lock tar:///var/folders/a1/a1Sg2MdXGcuIAjVu57gR9k+++TI/-Tmp-/npm-56300/1372501519337-0.2890261486172676/tmp.tgz /Users/tf/.npm/2cebc6c6-19337-0-2890261486172676-tmp-tgz.lock
20 silly lockFile 1f1177db-tar tar://.
21 silly lockFile 1f1177db-tar tar://.
22 silly lockFile 2cebc6c6-19337-0-2890261486172676-tmp-tgz tar:///var/folders/a1/a1Sg2MdXGcuIAjVu57gR9k+++TI/-Tmp-/npm-56300/1372501519337-0.2890261486172676/tmp.tgz
23 silly lockFile 2cebc6c6-19337-0-2890261486172676-tmp-tgz tar:///var/folders/a1/a1Sg2MdXGcuIAjVu57gR9k+++TI/-Tmp-/npm-56300/1372501519337-0.2890261486172676/tmp.tgz
24 verbose tar unpack /var/folders/a1/a1Sg2MdXGcuIAjVu57gR9k+++TI/-Tmp-/npm-56300/1372501519337-0.2890261486172676/tmp.tgz
25 silly lockFile 778522b7-19337-0-2890261486172676-package tar:///var/folders/a1/a1Sg2MdXGcuIAjVu57gR9k+++TI/-Tmp-/npm-56300/1372501519337-0.2890261486172676/package
26 verbose lock tar:///var/folders/a1/a1Sg2MdXGcuIAjVu57gR9k+++TI/-Tmp-/npm-56300/1372501519337-0.2890261486172676/package /Users/tf/.npm/778522b7-19337-0-2890261486172676-package.lock
27 silly lockFile 2cebc6c6-19337-0-2890261486172676-tmp-tgz tar:///var/folders/a1/a1Sg2MdXGcuIAjVu57gR9k+++TI/-Tmp-/npm-56300/1372501519337-0.2890261486172676/tmp.tgz
28 verbose lock tar:///var/folders/a1/a1Sg2MdXGcuIAjVu57gR9k+++TI/-Tmp-/npm-56300/1372501519337-0.2890261486172676/tmp.tgz /Users/tf/.npm/2cebc6c6-19337-0-2890261486172676-tmp-tgz.lock
29 silly gunzTarPerm modes [ '755', '644' ]
30 silly gunzTarPerm extractEntry package.json
31 silly gunzTarPerm extractEntry .npmignore
32 silly gunzTarPerm extractEntry README.md
33 silly gunzTarPerm extractEntry examples/donexample.js
34 silly gunzTarPerm extractEntry examples/donexample.coffee
35 silly gunzTarPerm extractEntry examples/views/views.js
36 silly gunzTarPerm extractEntry examples/views/views.coffee
37 silly gunzTarPerm extractEntry lib/don.js
38 silly gunzTarPerm extractEntry lib/don.coffee
39 silly gunzTarPerm extractEntry lib/don.rb
40 verbose read json /var/folders/a1/a1Sg2MdXGcuIAjVu57gR9k+++TI/-Tmp-/npm-56300/1372501519337-0.2890261486172676/package/package.json
41 silly lockFile 778522b7-19337-0-2890261486172676-package tar:///var/folders/a1/a1Sg2MdXGcuIAjVu57gR9k+++TI/-Tmp-/npm-56300/1372501519337-0.2890261486172676/package
42 silly lockFile 778522b7-19337-0-2890261486172676-package tar:///var/folders/a1/a1Sg2MdXGcuIAjVu57gR9k+++TI/-Tmp-/npm-56300/1372501519337-0.2890261486172676/package
43 silly lockFile 2cebc6c6-19337-0-2890261486172676-tmp-tgz tar:///var/folders/a1/a1Sg2MdXGcuIAjVu57gR9k+++TI/-Tmp-/npm-56300/1372501519337-0.2890261486172676/tmp.tgz
44 silly lockFile 2cebc6c6-19337-0-2890261486172676-tmp-tgz tar:///var/folders/a1/a1Sg2MdXGcuIAjVu57gR9k+++TI/-Tmp-/npm-56300/1372501519337-0.2890261486172676/tmp.tgz
45 verbose from cache /var/folders/a1/a1Sg2MdXGcuIAjVu57gR9k+++TI/-Tmp-/npm-56300/1372501519337-0.2890261486172676/package/package.json
46 verbose tar pack [ '/Users/tf/.npm/don/0.0.1/package.tgz',
46 verbose tar pack   '/var/folders/a1/a1Sg2MdXGcuIAjVu57gR9k+++TI/-Tmp-/npm-56300/1372501519337-0.2890261486172676/package' ]
47 verbose tarball /Users/tf/.npm/don/0.0.1/package.tgz
48 verbose folder /var/folders/a1/a1Sg2MdXGcuIAjVu57gR9k+++TI/-Tmp-/npm-56300/1372501519337-0.2890261486172676/package
49 silly lockFile 778522b7-19337-0-2890261486172676-package tar:///var/folders/a1/a1Sg2MdXGcuIAjVu57gR9k+++TI/-Tmp-/npm-56300/1372501519337-0.2890261486172676/package
50 verbose lock tar:///var/folders/a1/a1Sg2MdXGcuIAjVu57gR9k+++TI/-Tmp-/npm-56300/1372501519337-0.2890261486172676/package /Users/tf/.npm/778522b7-19337-0-2890261486172676-package.lock
51 silly lockFile 1de3ac39-ers-tf-npm-don-0-0-1-package-tgz tar:///Users/tf/.npm/don/0.0.1/package.tgz
52 verbose lock tar:///Users/tf/.npm/don/0.0.1/package.tgz /Users/tf/.npm/1de3ac39-ers-tf-npm-don-0-0-1-package-tgz.lock
53 silly lockFile 778522b7-19337-0-2890261486172676-package tar:///var/folders/a1/a1Sg2MdXGcuIAjVu57gR9k+++TI/-Tmp-/npm-56300/1372501519337-0.2890261486172676/package
54 silly lockFile 778522b7-19337-0-2890261486172676-package tar:///var/folders/a1/a1Sg2MdXGcuIAjVu57gR9k+++TI/-Tmp-/npm-56300/1372501519337-0.2890261486172676/package
55 silly lockFile 1de3ac39-ers-tf-npm-don-0-0-1-package-tgz tar:///Users/tf/.npm/don/0.0.1/package.tgz
56 silly lockFile 1de3ac39-ers-tf-npm-don-0-0-1-package-tgz tar:///Users/tf/.npm/don/0.0.1/package.tgz
57 silly lockFile 4edfa499-Users-tf-npm-don-0-0-1-package /Users/tf/.npm/don/0.0.1/package
58 verbose lock /Users/tf/.npm/don/0.0.1/package /Users/tf/.npm/4edfa499-Users-tf-npm-don-0-0-1-package.lock
59 silly lockFile 4edfa499-Users-tf-npm-don-0-0-1-package /Users/tf/.npm/don/0.0.1/package
60 silly lockFile 4edfa499-Users-tf-npm-don-0-0-1-package /Users/tf/.npm/don/0.0.1/package
61 verbose tar unpack /Users/tf/.npm/don/0.0.1/package.tgz
62 silly lockFile bb27d585-r-Users-tf-npm-don-0-0-1-package tar:///Users/tf/.npm/don/0.0.1/package
63 verbose lock tar:///Users/tf/.npm/don/0.0.1/package /Users/tf/.npm/bb27d585-r-Users-tf-npm-don-0-0-1-package.lock
64 silly lockFile 1de3ac39-ers-tf-npm-don-0-0-1-package-tgz tar:///Users/tf/.npm/don/0.0.1/package.tgz
65 verbose lock tar:///Users/tf/.npm/don/0.0.1/package.tgz /Users/tf/.npm/1de3ac39-ers-tf-npm-don-0-0-1-package-tgz.lock
66 silly gunzTarPerm modes [ '755', '644' ]
67 silly gunzTarPerm extractEntry package.json
68 silly gunzTarPerm extractEntry .npmignore
69 silly gunzTarPerm extractEntry README.md
70 silly gunzTarPerm extractEntry examples/donexample.js
71 silly gunzTarPerm extractEntry examples/donexample.coffee
72 silly gunzTarPerm extractEntry examples/views/views.js
73 silly gunzTarPerm extractEntry examples/views/views.coffee
74 silly gunzTarPerm extractEntry lib/don.js
75 silly gunzTarPerm extractEntry lib/don.coffee
76 silly gunzTarPerm extractEntry lib/don.rb
77 verbose read json /Users/tf/.npm/don/0.0.1/package/package.json
78 silly lockFile bb27d585-r-Users-tf-npm-don-0-0-1-package tar:///Users/tf/.npm/don/0.0.1/package
79 silly lockFile bb27d585-r-Users-tf-npm-don-0-0-1-package tar:///Users/tf/.npm/don/0.0.1/package
80 silly lockFile 1de3ac39-ers-tf-npm-don-0-0-1-package-tgz tar:///Users/tf/.npm/don/0.0.1/package.tgz
81 silly lockFile 1de3ac39-ers-tf-npm-don-0-0-1-package-tgz tar:///Users/tf/.npm/don/0.0.1/package.tgz
82 verbose from cache /Users/tf/.npm/don/0.0.1/package/package.json
83 verbose chmod /Users/tf/.npm/don/0.0.1/package.tgz 644
84 verbose chown /Users/tf/.npm/don/0.0.1/package.tgz [ 501, 20 ]
85 silly lockFile 3a52ce78- .
86 silly lockFile 3a52ce78- .
87 silly publish { name: 'don',
87 silly publish   version: '0.0.1',
87 silly publish   author: { name: 'Tim Farland', email: 'twfarland@gmail.com' },
87 silly publish   repository: { type: 'git', url: 'https://github.com/twfarland/don' },
87 silly publish   description: 'Lispy html templating DSL',
87 silly publish   homepage: 'http://github.com/twfarland/don',
87 silly publish   main: 'lib/don',
87 silly publish   readme: '#DON\n\n\'Document Object Notation\'\nAn embedded html templating DSL in Javascript\n\nNo license. Do what you want with this.\nCreator: [Tim Farland](http://timfarland.com)\n\n\n##Don is an embedded templating DSL for Javascript\n\nIt is inspired by the use of lisp s-expressions to compose html, and by the use of pure javascript as a templating language ala Coffeekup, but it primarily makes use of js array and objects to represent html. It supports haml-style abbreviations.\n\nDon templates are functions that take an object and return normal js data adhering to a certain form.\n\nThese template functions are transformed into html by Don.render()\n\nAll examples given in Coffeescript unless otherwise noted.\n\nBenefits:\n\n- Terse, but remains normal js\n- Use the bracket matching of your favourite editor\n- Js syntax checking can help spot malformed html\n- No complicated abstractions or syntax to learn\n- Use js data directly in templates (e.g. objects as tag attributes)\n- Fast enough without a compilation step\n- Flexible\n\nNote: I\'ve also included an experimental Ruby version.\n\n\n###Npm \n\n    npm install don\n\n\n###Node usage\n    \n    Don = require(\'don\').Don\n\n    articleTemplate = (data, key) ->\n        [\'article\', {id: data.id + key}\n            [\'h3\', data.title]\n            [\'div\', data.body]]\n                \n    Don.render(\n       {id: 123, title: \'My Article\', body: \'Article text\'},\n       articleTemplate\n    )\n                \n    # => \'<article id="123"><h3>My Article</h3><div>Article text</div></article>\'\n\n\n###Partials\n\nYou can use the power of closures to implement partials (a layout is a function that takes a template and returns a template):\n\n    partial = (d) ->\n        [\'article\', {id: d.id}\n            [\'h3\', d.title]\n            [\'div\'\n                d.body\n                [\'a\', {href: d.link}, d.anchor]]]     \n     \n    layout = (partial) -> (d) ->\n          [[\'!doctype html\']\n           [\'html\'\n               [\'head\'\n                   [\'meta\', charset: \'utf-8\']\n                   [\'title\', d.title]]\n               [\'body\'\n                   [\'section\'\n                       [\'h1\', d.title]\n                       [\'div\', {class: \'articles\'}, (partial a for a in d.articles)]]]]]    \n\n\n###Haml-style abbreviations\n\nYou can place short ids and css classes in the tag position, and omit the tag if it is a div:\n\n    user = (d) ->\n         [\'#profile\'\n                [\'img\', {src: \'/thumb/\' + d.id, alt: d.name}]\n                [\'.btn .settings\', \'Settings\']]\n\n    # => <div id="profile"><img src="/thumb/123" alt="John"><div class="btn settings">Settings</div></div>\n\n\n###Render inside\n\nYou can also use \'renderIn\', which calls the template function within the given data, allowing for templates that access the \'this,\' like:\n\n    articleTemplate = ->\n        [\'article\', {id: @id}\n            [\'h3\', @title]\n            [\'div\', @body]]\n\n\n###Acceptable forms\n\nThe arrays must adhere to Don\'s definition of an \'htmlArray\'\n\nAn htmlArray is an array with either:\n\n    [elementType]\n    [elementType, contents...]\n    [elementType, attributes]\n    [elementType, attributes, contents...]\n    []\n    [htmlArray...]\n \nwhere:\n\n- elementType is a string, e.g: \'div\'\n- contents is an arbitrary number of:\n - string, or\n - htmlArray\n- attributes is a js object, e.g: {id: \'mydiv\'}\n\nexamples:\n\n    htmlArray1 = [\'br\']\n    htmlArray2 = [\'h1\', \'page title\']\n    htmlArray3 = [\'h1\' \n                    \'page title\'\n                    [\'span\', \'subtitle\']]\n                    \n    htmlArray4 = [\'meta\', {name: \'description\', content: \'some webpage\'}]\n    htmlArray5 = [\'article\', {id: 123}, \'the article content\']\n    htmlArray6 = [\'article\', {id: 123} \n                    \'the article content\'\n                    [\'a\', {href: \'#\'}, \'some link\']]\n                    \n    htmlArray7 = []\n    htmlArray8 = [[\'br\'], [\'br\']]\n\n\n##Authors\n\ndon.js was created by [Tim Farland](http://www.timfarland.com), a web product designer based in Berlin.\n\n##Disclaimer\n\nThis is experimental code! I can\'t guarantee that it won\'t change or break something in your app. Don\'t sue me.',
87 silly publish   readmeFilename: 'README.md',
87 silly publish   bugs: { url: 'https://github.com/twfarland/don/issues' },
87 silly publish   _id: 'don@0.0.1',
87 silly publish   dist: { shasum: 'a65a70088175d8b1d89a529abd2a88cd6d624d1a' },
87 silly publish   _from: '.' }
88 verbose url raw don
89 verbose url resolving [ 'https://registry.npmjs.org/', './don' ]
90 verbose url resolved https://registry.npmjs.org/don
91 info trying registry request attempt 1 at 12:25:21
92 http PUT https://registry.npmjs.org/don
93 http 409 https://registry.npmjs.org/don
94 verbose url raw don
95 verbose url resolving [ 'https://registry.npmjs.org/', './don' ]
96 verbose url resolved https://registry.npmjs.org/don
97 info trying registry request attempt 1 at 12:25:23
98 http GET https://registry.npmjs.org/don
99 http 200 https://registry.npmjs.org/don
100 error publish fail Cannot publish over existing version.
100 error publish fail Update the 'version' field in package.json and try again.
100 error publish fail
100 error publish fail If the previous version was published in error, see:
100 error publish fail     npm help unpublish
100 error publish fail
100 error publish fail To automatically increment version numbers, see:
100 error publish fail     npm help version
101 error System Darwin 10.8.0
102 error command "node" "/usr/local/bin/npm" "publish" "."
103 error cwd /Users/tf/dev/don
104 error node -v v0.10.12
105 error npm -v 1.2.32
106 error code EPUBLISHCONFLICT
107 verbose exit [ 1, true ]
